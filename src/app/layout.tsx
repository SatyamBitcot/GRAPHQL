// RootLayout.tsx

import type { Metadata } from "next";
import localFont from "next/font/local";
import { ApolloProvider, InMemoryCache, ApolloClient } from "@apollo/client";
import "./globals.css";
import WrapperLayout from "../components/WrapperLayout";

// Define your fonts
const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

// Metadata for the app
export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

// Initialize Apollo Client
const client = new ApolloClient({
  uri: "/api/graphql", // Replace with your GraphQL API endpoint
  cache: new InMemoryCache(),
});

// Root layout with ApolloProvider and fonts
export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        {/* Wrap with ApolloProvider */}
        <WrapperLayout>{children}</WrapperLayout>
      </body>
    </html>
  );
}
